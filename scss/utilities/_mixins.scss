// -----------------------------------------------------------------------------
// This file contains all application-wide Sass mixins.
// -----------------------------------------------------------------------------

/// Breakpoints map
/// @prop {String} keys - Keys are identifiers mapped to a given length
/// @prop {Map} values - Values are actual breakpoints expressed in pixels

// 700, 900, 1440
$breakpoint-up: (
  'medium': 43.75em,
  'large': 56.25em,
  'xlarge': 90em
);

// 699.98px, 899.98px, 1439.98px
$breakpoint-down: (
  'small': 43.7485em,
  'medium': 56.24875em,
  'large': 89.99875em
);

/// Reponsive breakpoint manager
/// @access public
/// @param {String} $size - breakpoint
/// @require breakpoint-up or down
@mixin BreakPoint-up($size) {
  @media (min-width: map-get($breakpoint-up, $size)) {
    @content;  
  }
    
}

@mixin BreakPoint-down($size) {
  @media (max-width: map-get($breakpoint-down, $size)) {
    @content;
  }
}

/// Transition setting
@mixin transition-ease($interval) {

  transition: all $interval ease-in-out;
}



/// Event wrapper
/// @author Harry Roberts
/// @param {Bool} $self [false] - Whether or not to include current selector
/// @link https://twitter.com/csswizardry/status/478938530342006784 Original tweet from Harry Roberts
@mixin on-event($self: false) {
  @if $self {
    &,
    &:hover,
    &:active,
    &:focus,
    &:focus-within {
      @content;
    }
  } @else {
    &:hover,
    &:active,
    &:focus,
    &:focus-within {
      @content;
    }
  }
}

/// Make a context based selector a little more friendly
/// @author Kitty Giraudel
/// @param {String} $context
@mixin when-inside($context) {
  #{$context} & {
    @content;
  }
}


